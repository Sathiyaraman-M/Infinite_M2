name: Build & Push Docker Image

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.100

      - name: Docker Login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: Restore
        run: dotnet restore src/Infinite.Server/Infinite.Server.csproj

      - name: Build
        run: dotnet build src/Infinite.Server/Infinite.Server.csproj --configuration Release --no-restore

      - name: Publish to Local Docker daemon
        run: dotnet publish src/Infinite.Server/Infinite.Server.csproj --configuration Release --no-build --no-restore /t:PublishContainer

      - name: Setup Image Repository name
        run: echo "IMAGE_REPOSITORY=sathiyaraman-m/infinite-m2" >> $GITHUB_ENV

      - name: Check Tag if it is the latest
        id: check_tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && ${{ github.ref }} == "refs/tags/${{ env.TAG }}" ]]; then
            LATEST_TAG=$(git describe --tags --abbrev=0)
            if [[ "${{ env.TAG }}" == "$LATEST_TAG" ]]; then
              echo "This is the latest tag"
              echo "LATEST=true" >> $GITHUB_ENV
            else
              echo "This is not the latest tag"
              echo "LATEST=false" >> $GITHUB_ENV
            fi
          else
            echo "This is not a tag push event"
            echo "LATEST=false" >> $GITHUB_ENV
          fi

      - name: Tag Docker image
        run: |
          docker tag infinite-m2 ghcr.io/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          if [ "${{ env.LATEST }}" == "true" ]; then
            docker tag infinite-m2 ghcr.io/${{ env.IMAGE_REPOSITORY }}:latest
          fi

      - name: Push to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          if [ "${{ env.LATEST }}" == "true" ]; then
            docker push ghcr.io/${{ env.IMAGE_REPOSITORY }}:latest
          fi